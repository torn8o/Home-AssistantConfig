##########################################################################################
# Package Themes /config/packages/package_theme.yaml
##########################################################################################

#homeassistant:
#  customize:


##########################################################################################
# Groups
##########################################################################################

group:
  theme_selector:
    name: Theme selector
    icon: mdi:palette
    entities:
      - input_select.set_sunrise_theme
      - input_select.set_sunset_theme
      - sensor.sun_based_theme
      - automation.sun_based_theme_change
      - input_select.theme
##########################################################################################
# Sensors
##########################################################################################

sensor:
  - platform: template
    sensors:
      sun_based_theme:
        friendly_name: Sun based theme
        value_template: >
          {% if is_state('sun.sun','above_horizon') %}
           {{states('input_select.set_sunrise_theme')}}
          {% else %}
            {{states('input_select.set_sunset_theme')}}
          {% endif %}
        icon_template: >
          {% if is_state('sun.sun', 'above_horizon') %}
            mdi:weather-sunny
          {% else %}
            mdi:weather-night
          {% endif %}

##########################################################################################
# Inputs
##########################################################################################

input_select:
  theme:
    name: 'Select Theme'
    icon: mdi:palette
    options:
     - 'dark-II'
     - 'dark_cyanII'
     - 'dark_orangeII'
     - 'dark_red'
     - 'default'
     - 'dark-nights'
     - 'Purple-II'
     - 'midnightII'
     - 'Purple-Haze'
     - 'Clear-Nightz-II'
     - 'stormy_hues'
     - 'teal'
     - 'vintageII'
#    initial: 'teal'

  set_sunset_theme:
    name: 'Select Sunset theme'
    icon: mdi:weather-night
    options:
     - 'dark-II'
     - 'dark_cyanII'
     - 'dark_orangeII'
     - 'dark_red'
     - 'default'
     - 'dark-nights'
     - 'Purple-II'
     - 'midnightII'
     - 'Purple-Haze'
     - 'Clear-Nightz-II'
     - 'stormy_hues'
     - 'teal'
     - 'vintageII'
#    initial: 'darkblue'

  set_sunrise_theme:
    name: 'Select Sunrise theme'
    icon: mdi:weather-sunny
    options:
     - 'dark-II'
     - 'dark_cyanII'
     - 'dark_orangeII'
     - 'dark_red'
     - 'default'
     - 'dark-nights'
     - 'Purple-II'
     - 'midnightII'
     - 'Purple-Haze'
     - 'Clear-Nightz-II'
     - 'stormy_hues'
     - 'teal'
     - 'vintageII'
#    initial: 'minimal'
##########################################################################################
# Automations
##########################################################################################
input_boolean:
  notify_system:
    name: notify_system
    initial: on
##########################################################################################
# Automations
##########################################################################################

automation:
  - alias: 'Set theme at startup'
    initial_state: 'on'
    trigger:
     - platform: homeassistant
       event: start
    action:
      service: frontend.set_theme
      data:
        name: Purple-Haze
  - alias: 'Change Current Theme'
    id: 'Change Current Theme'
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: input_select.theme
    action:
      service: frontend.set_theme
      data_template:
        name: >
          {{states('input_select.theme')}}

  - alias: Sun based theme change
    id: 'Sun based theme change'
#    initial_state: 'on'
    trigger:
      - platform: homeassistant
        event: start
#      - platform: state
#        entity_id: input_select.set_sunset_theme
#      - platform: state
#        entity_id: input_select.set_sunrise_theme
      - platform: state
        entity_id: sensor.sun_based_theme
#      - platform: sun
#        event: sunrise
#      - platform: sun
#        event: sunset
#      - platform: state
#        entity_id: sun.sun
#        to: above_horizon
#      - platform: state
#        entity_id: sun.sun
#        to: below_horizon
    condition: []
    action:
#      - delay:
#          seconds: 3
      - service_template: frontend.set_theme
        data_template:
          name: >
            {{ states('sensor.sun_based_theme') }}
#            {% if trigger.platform == 'sun' %}
#              {{states('input_select.set_sunset_theme') if trigger.event == 'sunset' else
#                states('input_select.set_sunrise_theme') }}
#            {% else %}
#              {{ states('sensor.sun_based_theme') }}
#            {% endif %}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.notify_system', 'on')}}
      - service: notify.notify #script.notify_engine #notify.notify
        data_template:
          message: >
            {{ as_timestamp(now()) | timestamp_custom("%X") }}:
            Sun is {{states('sun.sun')}} and Frontend is set to '{{ states('sensor.sun_based_theme') }}'
