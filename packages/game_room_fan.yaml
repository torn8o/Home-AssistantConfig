

climate:
  - platform: generic_thermostat
    name: Game Room
    heater: switch.game_room_fan #fan.game_room_fan
    target_sensor: sensor.game_room_temperature_2
    ac_mode: True
    target_temp: 73
    initial_hvac_mode: "cool"
    cold_tolerance: 0
    hot_tolerance: -0

sensor:
  - platform: template
    sensors:
      game_room_temperature_target:
        friendly_name: "Game Room Target Temperature"
        unit_of_measurement: 'Â°F'
        value_template: "{{ state_attr('climate.game_room', 'temperature') }}"

switch:
  - platform: template
    switches:
      game_room_thermostat_switch:
        value_template:  "{{ is_state('automation.game_room_fan_turn_on', 'on') }}"
        turn_on:
          service: automation.turn_on
          entity_id: automation.game_room_fan_speed
        turn_off:
          - service: automation.turn_off
            entity_id: automation.game_room_fan_turn_on
          - service: switch.turn_off
            entity_id: switch.game_room_fan

automation:
  alias: game_room Fan Speed
  initial_state: false
  trigger:
    - platform: state
      entity_id: sensor.game_room_temperature
    - platform: state
      entity_id: sensor.game_room_temperature_target
  condition:
    - condition: state
      entity_id: timer.game_room_fan_cooldown
      state: 'idle'
  action:
    - service: switch.turn_on
      entity_id: switch.game_room_fan
      data_template:
          speed: >-
            {% if (((states('sensor.game_room_temperature_target') | float) - (states('sensor.game_room_temperature') | float))) >= 0.0 %}
              low
            {% elif (((states('sensor.game_room_temperature_target') | float) - (states('sensor.game_room_temperature') | float))) <= 0.0 %}
              high
            {% else %}
              medium
            {% endif %}
    - service: timer.start
      entity_id: timer.game_room_fan_cooldown
timer:
  game_room_fan_cooldown:
    name: "game_room Fan Cooldown"
    duration: '00:00:30'
