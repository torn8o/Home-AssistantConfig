- alias: Turn on front entry
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.front_door_sensor_sensor
    to: 'on'
  condition:
  - condition: template
    value_template: "{%- set hour=(as_timestamp(now())|timestamp_custom(\"%H\"))|int\
      \ -%} {%- if hour >= 19 and hour  <=  6 -%}\n  true\n{%- else -%}\n  false\n\
      {%- endif %}"
  action:
  - service: switch.turn_on
    entity_id: switch.front_entry_light_switch
  - delay:
      seconds: 30
  - service: switch.turn_off
    entity_id: switch.front_entry_light_switch
  id: b265b2421b044e379a6287f2949b933e
- alias: Timed 4pm
  initial_state: true
  trigger:
  - platform: time
    at: '16:00:00'
  action:
  - service: light.turn_on
    entity_id:
    - light.ge_12724_3way_dimmer_switch_level
  id: 9bde1d63a8444bd1abe6f0a950155a60
- alias: Charlie is home
  trigger:
    platform: state
    entity_id: group.charlie
    to: home
  action:
    service: notify.notify
    data:
      message: Charlie is Home
  id: f79f903e518142d9ae42e7c99c37b551
- alias: Charlie is away
  trigger:
    platform: state
    entity_id: group.charlie
    to: not_home
  action:
    service: notify.notify
    data:
      message: charlie is Away
  id: 1ca7ab1079c74616903a740f0c9d11a7
- alias: Update Available Notifications
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: persistent_notification.create
    data:
      title: New Update
      message: Update for Home Assistant is available.
  id: 8ad3e8bedbca4afa875715a2b6a03170
- alias: Z-Wave network is complete
  initial_state: true
  trigger:
    platform: event
    event_type: zwave.network_ready
  action:
    service: notify.ios_torn8o
    data:
      message: Z Wave Network is up
  id: 98cc05dc2f01474b9c9a1c438604718b
- alias: Theater Room Lights On Automation
  initial_state: true
  trigger:
  - platform: state
    entity_id: sensor.home_theater_status
    to: Online
  action:
  - service: light.turn_on
    entity_id: light.theater_room_lights
  - service: switch.turn_on
    entity_id: switch.circadian_lighting_theater_room_circadian
#- alias: 'theater start'
#  trigger:
#    - platform: state
#      entity_id: sensor.home_theater_status
#      to: Online
#      for:
#        seconds: 8
#    - service: media_player.select_source
#      data:
#        entity_id: media_player.home_theater
#        source: "Media Player"
#    - service: media_player.play_media
#      data_template:
#        entity_id: 
#          - media_player.home_theater
#        media_content_id: "/local/music/1.mp3"
#        media_content_type: music
#- alias: 'theater delay start'
#  trigger:
#    - platform: state
#      entity_id: sensor.home_theater_status
#      to: Online
#      for:
#        seconds: 40
#  action:
#    - service: media_player.select_source
#      data:
#        entity_id: media_player.home_theater
#        source: "Xbox One"


  id: dccd0c6c8f1f443aadc0f2a4271377c9
- alias: CL TV Lights off
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.home_theater_status
    to: Offline
    for:
      minutes: 3
  #    seconds: 15
  action:
  - service: switch.turn_off
    entity_id: switch.circadian_lighting_theater_room_circadian
  - service: light.turn_off
    entity_id: light.theater_room_lights

- alias: tts CL TV Lights off
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.home_theater_status
    to: Offline
    for:
      seconds: 8
  #    seconds: 15
  action:
  - service: notify.alexa_media
    data:
      data:
        type: announce
      target:
        - media_player.living_room
      message: "The Theater room Lights will turn off in three minutes. Please collect your things and head to bed"
  id: 81eb0c30035946e985fb65835b6125d8
- alias: tts CL TV Lights off 1 min
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.home_theater_status
    to: Offline
    for:
      minutes: 1
  action:
  - service: notify.alexa_media
    data:
      data:
        type: announce
      target:
        - media_player.living_room
      message: "The Theater room Lights will turn off in two minutes. Please collect your things and head to bed"
- alias: tts CL TV Lights off 2 min
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.home_theater_status
    to: Offline
    for:
      minutes: 2
  action:
  - service: notify.alexa_media
    data:
      data:
        type: announce
      target:
        - media_player.living_room
      message: "The Theater room Lights will turn off in one minute. Please collect your things and head to bed"
- alias: tts CL TV Lights off 2.30 min
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.home_theater_status
    to: Offline
    for:
      minutes: 2
      seconds: 30
  action:
  - service: notify.alexa_media
    data:
      data:
        type: announce
      target:
        - media_player.living_room
      message: "thirty second reminder lights will turn off in thirty seconds."
- alias: tts CL TV Lights off 3min
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.home_theater_status
    to: Offline
    for:
      minutes: 3
      seconds: 
  action:
  - service: notify.alexa_media
    data:
      data:
        type: announce
      target:
        - media_player.living_room
      message: "turning off theater room lights"
- alias: Turn ferina tree
  initial_state: true
  hide_entity: false
  trigger:
    platform: sun
    event: sunset
    offset: -00:00:20
  action:
    service: switch.turn_on
    entity_id: switch.ferina_tree
  id: 3e2406c8338e46139505d98d6b18626c
- alias: Turn deck led off at sunrise
  initial_state: true
  trigger:
    platform: sun
    event: sunrise
    offset: -04:33:00
  action:
    service: switch.turn_on
    entity_id: switch.ferina_tree
  id: 1535ba655906430bb509b032b51383a7
- alias: Turn accent lights led On At Sunset
  initial_state: true
  hide_entity: false
  trigger:
    platform: sun
    event: sunset
    offset: -00:00:10
  action:
    service: light.turn_on
    entity_id: light.accent_interior_lights
  id: efd253d4694e44acb256842d9ca95ca5
- alias: Turn accent lights off 12am
  initial_state: true
  trigger:
  - platform: time
    at: '00:01:00'
  action:
    service: light.turn_off
    entity_id: light.accent_interior_lights
  id: f7d328dcb4ca40d4bb9d321e1e6402fd
- alias: Trash Pickup Day Changed
  initial_state: true
  trigger:
    platform: state
    entity_id: input_select.trash_pickup_day
  action:
    - service: mqtt.publish
      data_template:
        topic: "/home/trashpickupday"
        retain: true
        payload: '{{ states.input_select.trash_pickup_day.state }}'
- alias: Recycle Pickup Day Changed
  initial_state: true
  trigger:
    platform: state
    entity_id: input_select.recycle_pickup_day
  action:
    - service: mqtt.publish
      data_template:
        topic: "/home/recyclepickupday"
        retain: true
        payload: '{{ states.input_select.recycle_pickup_day.state }}'

- alias: Recycle Pickup Week Changed
  initial_state: true
  trigger:
    platform: state
    entity_id: input_select.recycle_pickup_week
  action:
    - service: mqtt.publish
      data_template:
        topic: "/home/recyclepickupweek"
        retain: true
        payload: '{{ states.input_select.recycle_pickup_week.state }}'

- alias: Restore Trash Recycle Settings on Startup
  initial_state: true
  trigger:
    platform: homeassistant
    event: start
  action:
    - delay:
        minutes: 1
    - service: input_select.select_option
      data_template:
        entity_id: input_select.trash_pickup_day
        option: "{{states.sensor.trash_pickup_day.state}}"
    - service: input_select.select_option
      data_template:
        entity_id: input_select.recycle_pickup_day
        option: "{{states.sensor.recycle_pickup_day.state}}"
    - service: input_select.select_option
      data_template:
        entity_id: input_select.recycle_pickup_week
        option: "{{states.sensor.recycle_pickup_week.state}}"

###############################################################################
#  Reminder code - Reminds 5 times every hour starting 4 PM
#  Conditions: Only notifies when someone is at home
###############################################################################
- alias: Trash and Recycle Pickup Reminder
  initial_state: true
  trigger:
    - platform: time
      at: '16:00:00'
    - platform: time
      at: '17:00:00'
    - platform: time
      at: '18:00:00'
    - platform: time
      at: '19:00:00'
    - platform: time
      at: '20:00:00'
    - platform: time
      at: '21:00:00'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ states.input_boolean.trash_reminders.state == "on" }}'
    - condition: or
      conditions:
        - condition: state
          entity_id: calendar.trash_and_recycle
          state: 'on'
        - condition: state
          entity_id: sensor.recycle_day
          state: 'yes'
  action:
    - service: notify.ios_torn8o
      data_template:
        title: "Put Trash Out Trash Pickup Tomorrow!"
        message: "Please leave Trash bins out tonight!"
        data:
          push:
            badge: 0
            category: "trash_recycle"

    - service: script.notify_me
      data_template:
        message: >
          {% if states.sensor.trash_and_recycle.state == "Put Trash Out" %}
           Tomorrow is the Trash Pickup day!
          {% endif %}

    - service: script.voice_notify
      data_template:
        message: >
          {% if states.sensor.trash_and_recycle.state == "Put Trash Out" %}
            Attention!: Tomorrow is the Trash Pickup day.
            Please don't forget to leave Trash bins outside tonight!
          {% endif %}

- alias: Trash and Recycle Bin Left Outside Already
  initial_state: true
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: TRASH_LEFT
  action:
    - service: notify.ios_torn8o
      data:
        message: "Great job, Thank you!"
    - service: input_boolean.turn_off
      entity_id: input_boolean.trash_reminders

- alias: Remind later
  initial_state: true
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: TRASH_REMIND_LATER
  action:
    - service: notify.ios_torn8o
      data:
        message: "Will remind you again in an hour!"
    - service: input_boolean.turn_on
      entity_id: input_boolean.trash_reminders

- alias: Reset Trash Reminders
  initial_state: true
  trigger:
    - platform: time
      at: '09:00:00'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.trash_reminders
    - service: input_select.select_option
      data_template:
        entity_id: input_select.trash_pickup_day
        option: "{{states.sensor.trash_pickup_day.state}}"
    - service: input_select.select_option
      data_template:
        entity_id: input_select.recycle_pickup_day
        option: "{{states.sensor.recycle_pickup_day.state}}"
    - service: input_select.select_option
      data_template:
        entity_id: input_select.recycle_pickup_week
        option: "{{states.sensor.recycle_pickup_week.state}}"


#   alias: Trash - Enable trash Lighting
#   trigger:
#      - platform: state
#        entity_id: calendar.trash_and_recycle
#        to: 'on'
#        for:
#          hours: 9
#          minutes: 0
#          seconds: 0

#   condition:
#     condition: or
#     conditions:
#       - condition: state
#         entity_id: sensor.trash_and_recycle
#         state: 'Put Trash Out'

#   action:
#     - service: input_select.select_option
#       data:
#         entity_id: input_select.trash
#         option: 'Trash'

#  alias: light trash Reminder
#  initial_state: True
#  trigger:
#     - platform: time_pattern
#       at: '20:00:00'
#     - platform: time_pattern
#       at: '21:00:00'
#   condition:
#     condition: or
#     conditions:
#     - condition: state
#       entity_id: sensor.trash_and_recycle
#       state: 'Put Trash Out'
#   action:
#     - service: light.turn_on
#       entity_id: light.niche_leds
#       data:
#         transition: 900
#         brightness_pct: 100
#         color_name: purple
#         effect: Rainbow

#  alias: light recycle Reminder
#  initial_state: True
#  trigger:
#     - platform: time_pattern
#       at: '20:00:00'
#     - platform: time_pattern
#       at: '21:00:00'
#   condition:
#     condition: or
#     conditions:
#     - condition: state
#       entity_id: sensor.trash_and_recycle
#       state: 'Put Recycle Out'
#   action:
#     - service: light.turn_on
#       entity_id: light.niche_leds
#       data:
#         transition: 900
#         brightness_pct: 100
#         color_name: purple
#         effect: rainbow
- alias: tts garage door opened #creates the action button
  initial_state: True
  trigger:
    platform: state
    entity_id: sensor.garage_door_status
    from: 'Closed'
    to: 'Open'
  action:
  - service: notify.alexa_media
    data:
      data:
        type: announce
      target:
        - media_player.living_room
        - media_player.kitchen
        - media_player.game_room
        - media_player.master_bedroom
      message: "The Garage Door Has Been Opened"

- alias: tts garage door closed #creates the action button
  initial_state: True
  trigger:
    platform: state
    entity_id: sensor.garage_door_status
    from: 'Open'
    to: 'Closed'
  action:
  - service: notify.alexa_media
    data:
      data:
        type: announce
      target:
        - media_player.living_room
        - media_player.kitchen
        - media_player.game_room
        - media_player.master_bedroom
      message: "The Garage Door Has Been closed"

- alias: tts front eave lights #creates the action button
  initial_state: True
  trigger:
    platform: state
    entity_id: light.front_led_lights
    from: 'off'
    to: 'on'
  action:
  - service: notify.alexa_media
    data:
      data:
        type: announce
      target:
        - media_player.living_room
        - media_player.kitchen
        - media_player.game_room
        - media_player.master_bedroom
      message: "Front   eave   lights   have   turned   on"

- alias: tts accent lights #creates the notification
  initial_state: True
  trigger:
    platform: state
    entity_id: switch.circadian_lighting_accent
#    from: 'no motion'
    to: 'on'  #change this to actual trigger
  action:
  - service: notify.alexa_media
    data:
      data:
        type: announce
      target:
        - media_player.living_room
        - media_player.kitchen
        - media_player.game_room
        - media_player.master_bedroom
      message: "Accent Lights are now on"
##################################################################
## Holiday Automations
##################################################################

      ##########################################################
      ## Enable Christmas Lighting
      ##########################################################


#automation:
- alias: Save sensor mqtt State
  initial_state: True
  hide_entity: true
  trigger:
    platform: state
    entity_id: switch.switch_one, switch.switch_two, switch.switch_three, switch.switch_four, switch.switch_five
  action:
    service: mqtt.publish
    data_template:
      topic: "/home/rfswitches/{{ trigger.entity_id.split('.')[1] }}"
      retain: true
      qos: 1
      payload: '{{ trigger.to_state.state }}'
######################################################################
##  Dark House Little extra light - DARK and Cloudy or just rainy.
######################################################################

- alias: 'Dark outside light'
  initial_state: True
  trigger:
  #  - platform: numeric_state
  #    entity_id: sun.sun
  #    value_template: '{{ state.attributes.elevation }}'
  #    below: 20.0
    - platform: numeric_state
      entity_id: sensor.dark_sky_cloud_coverage
      above: 80
  #  - platform: numeric_state
  #    entity_id: sensor.dark_sky_precip_intensity
  #    above: 1

  condition:
  #  condition: and
  #  conditions:
  #    - condition: or
  #      conditions:
  #        - condition: and
  #          conditions:
  #            - condition: numeric_state
  #              entity_id: sun.sun
  #              value_template: '{{ state.attributes.elevation }}'
  #              below: 20.0
              - condition: numeric_state
                entity_id: sensor.dark_sky_cloud_coverage
                above: 80
  #        - condition: numeric_state
  #          entity_id: sensor.dark_sky_precip_intensity
  #          above: 1
  #    - condition: state
  #      entity_id: sun.sun
  #      state: 'above_horizon'

  action:
    - service: switch.turn_on
      entity_id:
#        - switch.front_lights_switch_28_0
        - light.front_entry_level



- alias: View lights
  initial_state: True
#  automation 2:
  trigger:
    platform: sun
    event: sunrise
  action:
    service: group.set_visibility
    entity_id: group.lights1
    data:
      visible: True
- alias: Pool Door Lights
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.pool_door_sensor_sensor
      to: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.master_bathroom_light_switch, switch.master_bedroom_h_switch
    - delay:
        minutes: 10
    - service: switch.turn_off
      entity_id: switch.master_bathroom_light_switch, switch.master_bedroom_h_switch
  #  automation:
- alias: Bathroom heater on
  initial_state: True
  trigger:
    - platform: numeric_state
      entity_id:  sensor.aeotec_zw100_multisensor_6_temperature_4
      below: 74
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.master_bedroom_h_switch
- alias: Bathroom heater off
  initial_state: True
  trigger:
    - platform: numeric_state
      entity_id:  sensor.aeotec_zw100_multisensor_6_temperature_4
      above: 74
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.master_bedroom_h_switch

- alias: attic fan_control_on_with_temp
  initial_state: True
  trigger:
    - platform: numeric_state
      entity_id: sensor.attic_temperature_2
      above: 118
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.attic_fans

- alias: attic fan_control_off_with_temp
  initial_state: True
  trigger:
    - platform: numeric_state
      entity_id: sensor.attic_temperature_2
      below: 105
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.attic_fans





# car sensor is connected and the garage door is closed


- alias: CarPresence_ON
  initial_state: True
  trigger:
    platform: state
    entity_id: binary_sensor.carpresence
    to: 'on'
  condition:
  - condition: state
    entity_id: 'sensor.garage_door_status'
    state: 'Closed'
  action:
  - service: switch.turn_on
    entity_id: 'switch.garage_door_opener_switch'

# car sensor is disconnected for one minute and the garage door is open
- alias: CarPresence_OFF
  initial_state: True
  trigger:
    platform: state
    entity_id: binary_sensor.carpresence
    to: 'off'
    for:
      minutes: 1
  condition:
  - condition: state
    entity_id: 'sensor.garage_door_status'
    state: 'Open'
  action:
  - service: switch.turn_on
    entity_id: 'switch.garage_door_opener_switch'
- alias: open curtains 9am
  initial_state: True
  hide_entity: false
  trigger:
    - platform: time
      at: '09:00:00'
  action:
    service: switch.turn_on
    entity_id: switch.curtain_open
#- alias: curtain open
#  trigger:
#    platform: time_pattern_pattern
#    seconds: '/15'
#  condition:
#    - condition: state
#      entity_id: switch.receiver5
#      state: "on"
#  action:
#    - service: switch.turn_on
#      data:
#        entity_id: switch.receiver5
- alias: close curtains sunset
  initial_state: True
  hide_entity: false
  trigger:
    platform: sun
    event: sunset
  action:
    service: switch.turn_on
    entity_id: switch.curtain_close

- alias: curtain reset open
  initial_state: True
  trigger:
    platform: time_pattern
    seconds: "/05"
  condition:
    - condition: state
      entity_id: switch.curtain_open
      state: "on"
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.curtain_open

- alias: curtain reset close
  initial_state: True
  trigger:
    platform: time_pattern
    seconds: "/05"
  condition:
    - condition: state
      entity_id: switch.curtain_close
      state: "on"
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.curtain_close
